//
//  RNDDSAssetLoader.h
//  Rayne
//
//  Copyright 2019 by Ãœberpixel. All rights reserved.
//  Unauthorized use is punishable by torture, mutilation, and vivisection.
//

#ifndef __RAYNE_DDSASSETLOADER_H_
#define __RAYNE_DDSASSETLOADER_H_

#include "../Base/RNBase.h"
#include "RNAssetLoader.h"

namespace RN
{
	class DDSAssetLoader : public AssetLoader
	{
	public:
		static void Register();

		Asset *Load(File *file, const LoadOptions &options) override;

	private:
		
		enum DDS_PIXELFORMAT_FLAGS
		{
			DDS_PIXELFORMAT_FLAGS_ALPHAPIXELS = 0x1,
			DDS_PIXELFORMAT_FLAGS_ALPHA = 0x2,
			DDS_PIXELFORMAT_FLAGS_FOURCC = 0x4,
			DDS_PIXELFORMAT_FLAGS_RGB = 0x40,
			DDS_PIXELFORMAT_FLAGS_YUV = 0x200,
			DDS_PIXELFORMAT_FLAGS_LUMINANCE = 0x20000
		};
		
		struct DDS_PIXELFORMAT
		{
			uint32 dwSize;
			uint32 dwFlags;
			uint32 dwFourCC;
			uint32 dwRGBBitCount;
			uint32 dwRBitMask;
			uint32 dwGBitMask;
			uint32 dwBBitMask;
			uint32 dwABitMask;
		};
		
		struct DDS_HEADER
		{
			uint32 dwSize;
			uint32 dwFlags;
			uint32 dwHeight;
			uint32 dwWidth;
			uint32 dwPitchOrLinearSize;
			uint32 dwDepth;
			uint32 dwMipMapCount;
			uint32 dwReserved1[11];
			DDS_PIXELFORMAT ddspf;
			uint32 dwCaps;
			uint32 dwCaps2;
			uint32 dwCaps3;
			uint32 dwCaps4;
			uint32 dwReserved2;
		};
		
		typedef enum
		{
			DDS_FORMAT_UNKNOWN,
			DDS_FORMAT_R32G32B32A32_TYPELESS,
			DDS_FORMAT_R32G32B32A32_FLOAT,
			DDS_FORMAT_R32G32B32A32_UINT,
			DDS_FORMAT_R32G32B32A32_SINT,
			DDS_FORMAT_R32G32B32_TYPELESS,
			DDS_FORMAT_R32G32B32_FLOAT,
			DDS_FORMAT_R32G32B32_UINT,
			DDS_FORMAT_R32G32B32_SINT,
			DDS_FORMAT_R16G16B16A16_TYPELESS,
			DDS_FORMAT_R16G16B16A16_FLOAT,
			DDS_FORMAT_R16G16B16A16_UNORM,
			DDS_FORMAT_R16G16B16A16_UINT,
			DDS_FORMAT_R16G16B16A16_SNORM,
			DDS_FORMAT_R16G16B16A16_SINT,
			DDS_FORMAT_R32G32_TYPELESS,
			DDS_FORMAT_R32G32_FLOAT,
			DDS_FORMAT_R32G32_UINT,
			DDS_FORMAT_R32G32_SINT,
			DDS_FORMAT_R32G8X24_TYPELESS,
			DDS_FORMAT_D32_FLOAT_S8X24_UINT,
			DDS_FORMAT_R32_FLOAT_X8X24_TYPELESS,
			DDS_FORMAT_X32_TYPELESS_G8X24_UINT,
			DDS_FORMAT_R10G10B10A2_TYPELESS,
			DDS_FORMAT_R10G10B10A2_UNORM,
			DDS_FORMAT_R10G10B10A2_UINT,
			DDS_FORMAT_R11G11B10_FLOAT,
			DDS_FORMAT_R8G8B8A8_TYPELESS,
			DDS_FORMAT_R8G8B8A8_UNORM,
			DDS_FORMAT_R8G8B8A8_UNORM_SRGB,
			DDS_FORMAT_R8G8B8A8_UINT,
			DDS_FORMAT_R8G8B8A8_SNORM,
			DDS_FORMAT_R8G8B8A8_SINT,
			DDS_FORMAT_R16G16_TYPELESS,
			DDS_FORMAT_R16G16_FLOAT,
			DDS_FORMAT_R16G16_UNORM,
			DDS_FORMAT_R16G16_UINT,
			DDS_FORMAT_R16G16_SNORM,
			DDS_FORMAT_R16G16_SINT,
			DDS_FORMAT_R32_TYPELESS,
			DDS_FORMAT_D32_FLOAT,
			DDS_FORMAT_R32_FLOAT,
			DDS_FORMAT_R32_UINT,
			DDS_FORMAT_R32_SINT,
			DDS_FORMAT_R24G8_TYPELESS,
			DDS_FORMAT_D24_UNORM_S8_UINT,
			DDS_FORMAT_R24_UNORM_X8_TYPELESS,
			DDS_FORMAT_X24_TYPELESS_G8_UINT,
			DDS_FORMAT_R8G8_TYPELESS,
			DDS_FORMAT_R8G8_UNORM,
			DDS_FORMAT_R8G8_UINT,
			DDS_FORMAT_R8G8_SNORM,
			DDS_FORMAT_R8G8_SINT,
			DDS_FORMAT_R16_TYPELESS,
			DDS_FORMAT_R16_FLOAT,
			DDS_FORMAT_D16_UNORM,
			DDS_FORMAT_R16_UNORM,
			DDS_FORMAT_R16_UINT,
			DDS_FORMAT_R16_SNORM,
			DDS_FORMAT_R16_SINT,
			DDS_FORMAT_R8_TYPELESS,
			DDS_FORMAT_R8_UNORM,
			DDS_FORMAT_R8_UINT,
			DDS_FORMAT_R8_SNORM,
			DDS_FORMAT_R8_SINT,
			DDS_FORMAT_A8_UNORM,
			DDS_FORMAT_R1_UNORM,
			DDS_FORMAT_R9G9B9E5_SHAREDEXP,
			DDS_FORMAT_R8G8_B8G8_UNORM,
			DDS_FORMAT_G8R8_G8B8_UNORM,
			DDS_FORMAT_BC1_TYPELESS,
			DDS_FORMAT_BC1_UNORM,
			DDS_FORMAT_BC1_UNORM_SRGB,
			DDS_FORMAT_BC2_TYPELESS,
			DDS_FORMAT_BC2_UNORM,
			DDS_FORMAT_BC2_UNORM_SRGB,
			DDS_FORMAT_BC3_TYPELESS,
			DDS_FORMAT_BC3_UNORM,
			DDS_FORMAT_BC3_UNORM_SRGB,
			DDS_FORMAT_BC4_TYPELESS,
			DDS_FORMAT_BC4_UNORM,
			DDS_FORMAT_BC4_SNORM,
			DDS_FORMAT_BC5_TYPELESS,
			DDS_FORMAT_BC5_UNORM,
			DDS_FORMAT_BC5_SNORM,
			DDS_FORMAT_B5G6R5_UNORM,
			DDS_FORMAT_B5G5R5A1_UNORM,
			DDS_FORMAT_B8G8R8A8_UNORM,
			DDS_FORMAT_B8G8R8X8_UNORM,
			DDS_FORMAT_R10G10B10_XR_BIAS_A2_UNORM,
			DDS_FORMAT_B8G8R8A8_TYPELESS,
			DDS_FORMAT_B8G8R8A8_UNORM_SRGB,
			DDS_FORMAT_B8G8R8X8_TYPELESS,
			DDS_FORMAT_B8G8R8X8_UNORM_SRGB,
			DDS_FORMAT_BC6H_TYPELESS,
			DDS_FORMAT_BC6H_UF16,
			DDS_FORMAT_BC6H_SF16,
			DDS_FORMAT_BC7_TYPELESS,
			DDS_FORMAT_BC7_UNORM,
			DDS_FORMAT_BC7_UNORM_SRGB,
			DDS_FORMAT_AYUV,
			DDS_FORMAT_Y410,
			DDS_FORMAT_Y416,
			DDS_FORMAT_NV12,
			DDS_FORMAT_P010,
			DDS_FORMAT_P016,
			DDS_FORMAT_420_OPAQUE,
			DDS_FORMAT_YUY2,
			DDS_FORMAT_Y210,
			DDS_FORMAT_Y216,
			DDS_FORMAT_NV11,
			DDS_FORMAT_AI44,
			DDS_FORMAT_IA44,
			DDS_FORMAT_P8,
			DDS_FORMAT_A8P8,
			DDS_FORMAT_B4G4R4A4_UNORM,
			DDS_FORMAT_P208,
			DDS_FORMAT_V208,
			DDS_FORMAT_V408,
			DDS_FORMAT_FORCE_UINT
		} DDS_FORMAT;
		
		typedef enum
		{
			DDS_RESOURCE_DIMENSION_UNKNOWN,
			DDS_RESOURCE_DIMENSION_BUFFER,
			DDS_RESOURCE_DIMENSION_TEXTURE1D,
			DDS_RESOURCE_DIMENSION_TEXTURE2D,
			DDS_RESOURCE_DIMENSION_TEXTURE3D
		} DDS_RESOURCE_DIMENSION;
		
		struct DDS_HEADER_DXT10
		{
			DDS_FORMAT DDSFormat;
			DDS_RESOURCE_DIMENSION resourceDimension;
			uint32 miscFlag;
			uint32 arraySize;
			uint32 miscFlags2;
		};
		
		DDSAssetLoader(const Config &config);

		__RNDeclareMetaInternal(DDSAssetLoader)
	};
}


#endif /* __RAYNE_DDSASSETLOADER_H_ */

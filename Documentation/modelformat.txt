struct ModelHeader
{
    int32 magic; // 0x8A7FEED1
    int32 version; // 0
    
    int32 materials; // Number of materials
    int32 groups; // Number of groups
};

// Materials are directly followed by the header
struct ModelMaterial
{
    char culling; // bit 0: 0 = CCW, 1 = CW. Bit 1: 0 = no culling, 1 = culling
    char alphaTest;
    
    uint32 diffuse; // RGBA, 1byte/channel, 0-255
    uint32 textures;
    
    {
        uint32 length;
        char name[length];
    }[textures];
};

// Groups are directly followed by the materials
struct ModelGroup
{
    int32 material; // The material used by the group (starting at 0, subscription into the materials array)
    int32 features; // The number of features for that particular group
    
    int32 nameLength;
    char name[nameLength];
};

// Features follow directly after a group, with the next group being directly after all features
struct ModelFeature
{
    int32 feature; // The represented feature. 0 = Vertices, 1 = Normals, 2 = Tangents, 3 = Color0, 4 = Color1, 5 = first UV set, 6 = second UV set, 7 = indices
    
    int32 elements; // The number of elements for the given feature
    int32 elementSize; // The size of each element
    int32 elementMember; // The number of members per element
    
    uint32 size;
    uint8 data[size];
};
